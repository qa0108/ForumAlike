@using Microsoft.EntityFrameworkCore.Metadata.Internal
@{
    Layout = "_Layout";
    var post    = ViewBag.Post as DataAccess.Models.Post;
    var replies = ViewBag.Comments as List<DataAccess.Models.Reply>; // Assuming you have a Comment model and it's passed to the view
}

<!DOCTYPE html>

<html>
<head>
    <title>@post?.Title</title>
    <link rel="stylesheet" href="~/css/PostDetail.css"/>
</head>
<body>

<div>
    <div class="title-actions-container">
        <h2>@post?.Title</h2>
        @if (ViewBag.IsOwner != null && ViewBag.IsOwner
             || (ViewBag.IsAdmin != null && ViewBag.IsAdmin))
        {
            <div class="text-right-align" style="margin-bottom: 15px; margin-top: 15px">
                @if (ViewBag.IsOwner != null && ViewBag.IsOwner)
                {
                    <a class="btn-primary btn" href="/Post/Modify/?postId=@post.PostId">Modify</a>
                }
                <a class="btn-danger btn" id="deletePostButton">Delete</a>
            </div>
        }
    </div>
    <p>@post.Content</p>
</div>

<div>
    <form asp-action="AddComment" method="post">
        <input type="hidden" name="PostId" value="@post.PostId"/>
        <div class="form-group">
            <textarea class="form-control rounded-textarea" id="Content" name="Content" placeholder="Add a comment"></textarea>
        </div>
        <div class="text-right-align">
            <button type="submit" class="btn btn-primary btn-sm">Post Comment</button>
        </div>
    </form>
</div>
<div>
    <h4>Replies</h4>
    
    @if (replies != null && replies.Any())
    {
        foreach (var comment in replies.Where(c => c.ParentReplyId == null))
        {
            @Html.Partial("_CommentPartial", comment)
        }
    }
    else
    {
        <p>No comments yet.</p>
    }
</div>
</body>
</html>

<script>
document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('.reply-btn').forEach(function(button) {
        button.addEventListener('click', function() {
            console.log("Click on reply");
            var commentId = this.getAttribute('data-comment-id');
            var replyInput = document.getElementById('reply-input-' + commentId);
            replyInput.style.display = replyInput.style.display === 'none' ? 'block' : 'none';
        });
    });
});

document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('.reply-btn').forEach(function(button) {
        button.addEventListener('click', function() {
            var commentId = this.getAttribute('data-comment-id');
            var replyInput = document.getElementById('reply-input-' + commentId);
            replyInput.style.display = replyInput.style.display === 'none' ? 'block' : 'none';
        });
    });

    document.querySelectorAll('.show-children-btn').forEach(function(button) {
        button.addEventListener('click', function() {
            var commentId = this.getAttribute('data-comment-id');
            var childComments = document.getElementById('child-comments-' + commentId);
            childComments.style.display = childComments.style.display === 'none' ? 'block' : 'none';
        });
    });
});

document.getElementById('deletePostButton').addEventListener('click', function(e) {
    e.preventDefault();
    var postId = '@post.PostId'; 
    var confirmDeletion = confirm('Are you sure you want to delete this post?');
    if (confirmDeletion) {
       fetch('/Post/Delete/?postId=' + postId, {
                   method: 'DELETE',
               })
               .then(response => {
                   if (response.ok) {
                        window.location.href = '/Home/Index';
                   } else {
                       alert('There was an error deleting the post.');
                   }
               })
               .catch(error => console.error('Error:', error));
    }
});
</script>